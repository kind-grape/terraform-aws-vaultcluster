- name: Gather instance metadata
  ec2_metadata_facts:

- name: Set Location
  set_fact: location="{{ ansible_ec2_placement_region }}"

- name: Set Name
  set_fact: instance_id="{{ ansible_ec2_instance_id }}"

- name: Set Ip Address
  set_fact: local_ip_address="{{ ansible_ec2_local_ipv4 }}"

# Vault Certificates
- name: Fetch Vault CA certificate bundle from parameter store
  shell: "aws ssm get-parameter --output json --region {{ location }} --with-decryption --name vault-tls-ca-bundle | jq -r '.Parameter | .Value'"
  register: vault_tls_ca_bundle
  when:
    - stat_vault_tls_ca_bundle.stat.exists == false
    - vault_https_enabled | bool

- name: Fetch Vault server certificate from parameter store
  shell: "aws ssm get-parameter --output json --region {{ location }} --with-decryption --name vault-server-tls-cert | jq -r '.Parameter | .Value'"
  register: vault_server_tls_cert
  when:
    - stat_vault_server_tls_cert.stat.exists == false
    - vault_https_enabled | bool

- name: Fetch Vault server certificate key from parameter store
  shell: "aws ssm get-parameter --output json --region {{ location }} --with-decryption --name vault-server-tls-key | jq -r '.Parameter | .Value'"
  register: vault_server_tls_key
  when:
    - stat_vault_server_tls_key.stat.exists == false
    - vault_https_enabled | bool

- name: Write Tokens to File System
  import_tasks: write-certs.yml

- name: Copying Certificates
  import_tasks: certs.yml
  when: vault_https_enabled | bool
