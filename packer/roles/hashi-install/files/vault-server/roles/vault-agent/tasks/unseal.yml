- name: Check for unseal temp file
  stat: path=/tmp/vault.txt
  register: unseal_temp_file
  ignore_errors: yes

- name: Check for unseal keys temp file
  stat: path=/tmp/vault_unseal.txt
  register: unseal_keys_temp_file
  ignore_errors: yes

- name: Operator Init
  shell: |
    . /etc/profile.d/99-consul-env.sh
    . /etc/profile.d/99-vault-env.sh
    vault operator init -recovery-shares={{ vault_recovery_shares }} -recovery-threshold={{ vault_recovery_threshold }}
  register: operator_init
  when: unseal_temp_file.stat.exists == false

- name: Set Operator Output
  set_fact: operator_init_output="{{ operator_init.stdout }}"
  when: unseal_temp_file.stat.exists == false

- name: Write Unseal Temp File
  copy:
    content: "{{ operator_init_output }}"
    dest: /tmp/vault.txt
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0440
  when: unseal_temp_file.stat.exists == false

- name: Set Operator Output
  set_fact: operator_init_output="{{ lookup('file', '/tmp/vault.txt') }}"
  when: unseal_temp_file.stat.exists == true

- debug: msg="{{ operator_init_output }}"

- name: Extract Unseal Keys
  shell: |
    . /etc/profile.d/99-consul-env.sh
    . /etc/profile.d/99-vault-env.sh
    echo {{ operator_init_output }} | grep "Recovery Key" | awk '{ print $4 }'
  register: unseal_keys
  when: unseal_keys_temp_file.stat.exists == false

- name: Set Operator Output
  set_fact: unseal_keys_output="{{ unseal_keys.stdout }}"
  when: unseal_keys_temp_file.stat.exists == false

- name: Write Unseal Keys Temp File
  copy:
    content: "{{ unseal_keys_output }}"
    dest: /tmp/vault_unseal.txt
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0440
  when: unseal_keys_temp_file.stat.exists == false

- name: Set Unseal Keys Output
  set_fact: unseal_keys_output="{{ lookup('file', '/tmp/vault_unseal.txt') }}"
  when: unseal_keys_temp_file.stat.exists == true

- debug: msg="{{ unseal_keys_output }}"
