- debug: msg="START - server.yml"

- name: Master Token
  import_tasks: token-master.yml

- name: Run leader detection and tasks
  import_tasks: leader.yml

- name: Show consul leader
  debug:
    var: consul_leader

- name: Add ACL configuration - server.yml
  template:
    src: etc/consul.d/acl.hcl.j2
    dest: '/etc/consul.d/acl.hcl'
    owner: 'consul'
    group: 'consul'
    mode: 0660
  register: consul_acl_config

- name: Restart Consul - server.yml
  service: name=consul state=restarted
  when: consul_acl_config.changed

- name: Wait and check for serf port
  wait_for:
    port: "{{ consul_serf_lan_port }}"
    delay: 6

- name: Check for agent token on filesystem
  stat: path=/etc/consul.d/tokens/agent
  register: agent_token_file
  ignore_errors: yes

- set_fact: agent_token_file_contents="{{ lookup('file', '/etc/consul.d/tokens/agent') }}"
  when: agent_token_file.stat.exists == true

# - debug: msg="{{ agent_token_file }}"

# - name: Check for vault token on filesystem
#   stat: path=/etc/consul.d/tokens/vault
#   register: vault_token_file
#   ignore_errors: yes
#
# - set_fact: vault_token_file_contents="{{ lookup('file', '/etc/consul.d/tokens/vault') }}"
#   # when: vault_token_file.stat.exists == true
#
# - name: Check for default token on filesystem
#   stat: path=/etc/consul.d/tokens/default
#   register: default_token_file
#   ignore_errors: yes
#
# - set_fact: default_token_file_contents="{{ lookup('file', /etc/consul.d/tokens/default) }}"
#   # when: default_token_file.stat.exists == true

- name: Run bootstrap tasks
  import_tasks: bootstrap-acl.yml
  when:
    - consul_leader == true

- name: Write Tokens to File System
  import_tasks: token-write.yml
  when: consul_leader == false

- debug: msg="END - server.yml"
