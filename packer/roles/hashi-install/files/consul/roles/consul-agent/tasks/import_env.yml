- debug: msg="START - import_env.yml"

- name: Check for master token on filesystem
  stat: path=/etc/consul.d/tokens/master
  register: master_token_file
  ignore_errors: yes

- name: Check for agent token on filesystem
  stat: path=/etc/consul.d/tokens/agent
  register: agent_token_file
  ignore_errors: yes

- name: Check for vault token on filesystem
  stat: path=/etc/consul.d/tokens/vault
  register: vault_token_file
  ignore_errors: yes

- name: Check for default token on filesystem
  stat: path=/etc/consul.d/tokens/default
  register: default_token_file
  ignore_errors: yes

- name: Check for /etc/consul.d/tls/consul_tls_ca_bundle
  stat: path=/etc/consul.d/tls/consul_tls_ca_bundle
  register: stat_consul_tls_ca_bundle
  ignore_errors: yes

- name: Check for /etc/consul.d/tls/consul_client_tls_cert
  local_action: stat path=/etc/consul.d/tls/consul_client_tls_cert
  register: stat_consul_client_tls_cert
  ignore_errors: yes

- name: Check for /etc/consul.d/tls/consul_client_tls_key
  local_action: stat path=/etc/consul.d/tls/consul_client_tls_key
  register: stat_consul_client_tls_key
  ignore_errors: yes

- name: Check for /etc/consul.d/tls/consul_server_tls_cert
  local_action: stat path=/etc/consul.d/tls/consul_server_tls_cert
  register: stat_consul_server_tls_cert
  ignore_errors: yes

- name: Check for /etc/consul.d/tls/consul_server_tls_key
  local_action: stat path=/etc/consul.d/tls/consul_server_tls_key
  register: stat_consul_server_tls_key
  ignore_errors: yes

- name: Fetch client agent token from parameter store
  shell: "aws ssm get-parameter --output json --region {{ ansible_ec2_placement_region }} --with-decryption --name consul-{{ consul_join_tag_value }}-acl-agent | jq -r '.Parameter | .Value'"
  register: client_agent_token
  until: client_agent_token.stdout != ""
  retries: 120
  delay: 2
  ignore_errors: yes
  when: agent_token_file.stat.exists == false

- name: Register ACL Agent token for Ansible plays
  set_fact: client_agent_token="{{ client_agent_token.stdout }}"
  when: agent_token_file.stat.exists == false

- name: Register ACL Agent token for Ansible plays
  set_fact: client_agent_token="{{ lookup('file', agent_token_file.stat.path) }}"
  when: agent_token_file.stat.exists == true

- name: Fetch client Vault token from parameter store
  shell: "aws ssm get-parameter --output json --region {{ ansible_ec2_placement_region }} --with-decryption --name consul-{{ consul_join_tag_value }}-acl-vault | jq -r '.Parameter | .Value'"
  register: vault_agent_token
  until: vault_agent_token.stdout != ""
  retries: 120
  delay: 2
  ignore_errors: yes
  when: vault_token_file.stat.exists == false

- name: Register ACL Vault token for Ansible plays
  set_fact: vault_agent_token="{{ vault_agent_token.stdout }}"
  when: vault_token_file.stat.exists == false

- name: Register ACL Vault token for Ansible plays
  set_fact: vault_agent_token="{{ lookup('file', vault_token_file.stat.path) }}"
  when: vault_token_file.stat.exists == true

- name: Fetch client default token from parameter store
  shell: "aws ssm get-parameter --output json --region {{ ansible_ec2_placement_region }} --with-decryption --name consul-{{ consul_join_tag_value }}-acl-default | jq -r '.Parameter | .Value'"
  register: default_agent_token
  until: default_agent_token.stdout != ""
  retries: 120
  delay: 2
  ignore_errors: yes
  when:
    - default_token_file.stat.exists == false
    - consul_agent_is_server | bool

- name: Register ACL Default token for Ansible plays
  set_fact: default_agent_token="{{ default_agent_token.stdout }}"
  when:
    - default_token_file.stat.exists == false
    - consul_agent_is_server | bool

- name: Register ACL Default token for Ansible plays
  set_fact: default_agent_token="{{ lookup('file', default_token_file.stat.path) }}"
  when:
    - default_token_file.stat.exists == true
    - consul_agent_is_server | bool

- name: Fetch Gossip Encryption Key from parameter store
  shell: "aws ssm get-parameter --output json --region {{ ansible_ec2_placement_region }} --with-decryption --name consul_gossip_encryption_key | jq -r '.Parameter | .Value'"
  register: consul_encryption_key
  until: consul_encryption_key.stdout != ""
  retries: 120
  delay: 2
  ignore_errors: yes

- name: Register Gossip Encryption Key for Ansible plays
  set_fact: consul_encryption_key="{{ consul_encryption_key.stdout }}"

- name: Show Agent Token
  debug:
    var: client_agent_token

- name: Show Vault Token
  debug:
    var: vault_agent_token

- name: Show Default Token
  debug:
    var: default_agent_token
  when: consul_agent_is_server | bool

- name: Show Gossip Encryption Key
  debug:
    var: consul_encryption_key
  when: consul_agent_is_server | bool

- debug: msg="END - import_env.yml"
